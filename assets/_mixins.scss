// variable
$color1: #cd2653;

// rem calculator 
@function rem($pixels, $context: 16px) {
    @if (unitless($pixels)) {
        $pixels: $pixels * 1px;
    }

    @if (unitless($context)) {
        $context: $context * 1px;
    }

  @return $pixels / $context * 1rem;
}

// fluid type 
@mixin fluid-type($min-font-size: 15px, $max-font-size: 17px, $lower-range: 420px, $upper-range: 1200px) {

    font-size: calc(#{rem($min-font-size)} + #{(($max-font-size / ($max-font-size * 0 + 1)) - ($min-font-size / ($min-font-size * 0 + 1)))} * ( (100vw - #{$lower-range}) / #{(($upper-range / ($upper-range * 0 + 1)) - ($lower-range / ($lower-range * 0 + 1)))}));

    @media screen and (max-width: $lower-range) {
        font-size: rem($min-font-size);
    }

    @media screen and (min-width: $upper-range){
        font-size: rem($max-font-size);
    }
}

$xxs: 420px;
$xs: 560px;
$sm: 768px;
$md: 991px;
$lg: 1200px;
$xl: 1920px;

$breakpoints: (
    'xxs' : $xxs,
    'xs'  : $xs,
    'sm'  : $sm,
    'md'  : $md,
    'lg'  : $lg,
    'xl'  : $xl,
);

// usage: mq('sm') { ... }
@mixin mq($width, $type: max) {
   @if map_has_key($breakpoints, $width) {
       $width: map_get($breakpoints, $width);
       @media only screen and (#{$type}-width: $width) {
           @content;
       }
   }
}